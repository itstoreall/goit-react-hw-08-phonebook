{"version":3,"sources":["views/Views.module.scss","views/LoginView.jsx"],"names":["module","exports","LoginView","state","email","password","showPassword","handleEmailChange","target","name","value","setState","handleSubmit","e","preventDefault","props","onLogin","handlePasswordChange","prop","event","handleClickShowPassword","handleMouseDownPassword","this","className","s","formWrap","onSubmit","form","autoComplete","id","label","variant","input","type","onChange","htmlFor","endAdornment","position","aria-label","onClick","onMouseDown","edge","labelWidth","formBtn","Component","mapDispatchToProps","authOperations","logIn","connect"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,SAAW,wBAAwB,KAAO,oBAAoB,MAAQ,qBAAqB,MAAQ,qBAAqB,QAAU,yB,8OCanLC,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,GAIVC,cAAc,G,EAGhBC,kBAAoB,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACrC,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMC,QAAQ,EAAKb,OAExB,EAAKQ,SAAS,CAAEF,KAAM,GAAIL,MAAO,GAAIC,SAAU,M,EAGjDY,qBAAuB,SAACC,GAAD,OAAU,SAACC,GAChC,EAAKR,SAAL,2BAAmB,EAAKR,OAAxB,kBAAgCe,EAAOC,EAAMX,OAAOE,W,EAGtDU,wBAA0B,WACxB,EAAKT,SAAL,2BAAmB,EAAKR,OAAxB,IAA+BG,cAAe,EAAKH,MAAMG,iB,EAG3De,wBAA0B,SAACF,GACzBA,EAAML,kB,4CAGR,WAAU,IAAD,EACqBQ,KAAKnB,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SAEf,OACE,sBAAKkB,UAAWC,IAAEC,SAAlB,UACE,uCAEA,uBACEC,SAAUJ,KAAKV,aACfW,UAAWC,IAAEG,KACbC,aAAa,MAHf,UAKE,cAAC,IAAD,CACEC,GAAG,iBACHC,MAAM,QACNC,QAAQ,WACRR,UAAWC,IAAEQ,MACbC,KAAK,QACLxB,KAAK,QACLC,MAAON,EACP8B,SAAUZ,KAAKf,oBAGjB,eAAC,IAAD,CACEgB,UAAWC,IAAEQ,MAEbD,QAAQ,WAHV,UAKE,cAAC,IAAD,CAAYI,QAAQ,8BAApB,sBAGA,cAAC,IAAD,CACEF,KAAMX,KAAKnB,MAAMG,aAAe,OAAS,WAEzC4B,SAAUZ,KAAKL,qBAAqB,YACpCY,GAAG,8BAEHpB,KAAK,WACLC,MAAOL,EAEP+B,aACE,cAAC,IAAD,CAAgBC,SAAS,MAAzB,SACE,cAAC,IAAD,CACEC,aAAW,6BACXC,QAASjB,KAAKF,wBACdoB,YAAalB,KAAKD,wBAClBoB,KAAK,MAJP,SAMGnB,KAAKnB,MAAMG,aACV,cAAC,IAAD,IAEA,cAAC,IAAD,QAKRoC,WAAY,QAIhB,cAAC,IAAD,CACEX,QAAQ,YACRR,UAAWC,IAAEmB,QACbV,KAAK,SAHP,iC,GA9FcW,aA4GlBC,EAAqB,CACzB7B,QAAS8B,IAAeC,OAGXC,sBAAQ,KAAMH,EAAdG,CAAkC9C","file":"static/js/Login.edd75df0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Views_container__1voF8\",\"formWrap\":\"Views_formWrap__2J9S5\",\"form\":\"Views_form__3aUqB\",\"label\":\"Views_label__3Qumt\",\"input\":\"Views_input__Tx9hG\",\"formBtn\":\"Views_formBtn__eCIIF\"};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport s from './Views.module.scss';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\n\nclass LoginView extends Component {\n  state = {\n    email: '',\n    password: '',\n\n    // weight: '',\n    // weightRange: '',\n    showPassword: false,\n  };\n\n  handleEmailChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onLogin(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  handlePasswordChange = (prop) => (event) => {\n    this.setState({ ...this.state, [prop]: event.target.value });\n  };\n\n  handleClickShowPassword = () => {\n    this.setState({ ...this.state, showPassword: !this.state.showPassword });\n  };\n\n  handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div className={s.formWrap}>\n        <h1>Login</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          className={s.form}\n          autoComplete='off'\n        >\n          <TextField\n            id='outlined-basic'\n            label='Email'\n            variant='outlined'\n            className={s.input}\n            type='email'\n            name='email'\n            value={email}\n            onChange={this.handleEmailChange}\n          />\n\n          <FormControl\n            className={s.input}\n            // className={clsx(makeStyles.margin, makeStyles.textField)}\n            variant='outlined'\n          >\n            <InputLabel htmlFor='outlined-adornment-password'>\n              Password\n            </InputLabel>\n            <OutlinedInput\n              type={this.state.showPassword ? 'text' : 'password'}\n              // value={values.password}\n              onChange={this.handlePasswordChange('password')}\n              id='outlined-adornment-password'\n              // type='password'\n              name='password'\n              value={password}\n              // onChange={this.handleChange}\n              endAdornment={\n                <InputAdornment position='end'>\n                  <IconButton\n                    aria-label='toggle password visibility'\n                    onClick={this.handleClickShowPassword}\n                    onMouseDown={this.handleMouseDownPassword}\n                    edge='end'\n                  >\n                    {this.state.showPassword ? (\n                      <Visibility />\n                    ) : (\n                      <VisibilityOff />\n                    )}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={70}\n            />\n          </FormControl>\n\n          <Button\n            variant='contained'\n            className={s.formBtn}\n            type='submit'\n            // onClick={onLogout}\n          >\n            Login now\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onLogin: authOperations.logIn,\n};\n\nexport default connect(null, mapDispatchToProps)(LoginView);\n\n/*\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport s from './Views.module.scss';\n\nclass LoginView extends Component {\n  state = {\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onLogin(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div>\n        <h1>Login Page</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          className={s.form}\n          autoComplete='off'\n        >\n          <label className={s.label}>\n            <input\n              type='email'\n              name='email'\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={s.label}>\n            <input\n              type='password'\n              name='password'\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type='submit'>Login now</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onLogin: authOperations.logIn,\n};\n\nexport default connect(null, mapDispatchToProps)(LoginView);\n*/\n"],"sourceRoot":""}