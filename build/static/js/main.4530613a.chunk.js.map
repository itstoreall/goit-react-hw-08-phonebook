{"version":3,"sources":["components/ContactList/Contacts.module.scss","App.module.scss","components/Filter/Filter.module.scss","redux/contacts/contact-actions.js","redux/contacts/contact-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contact-reducer.js","components/PhonebookForm/Form.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.js","components/Filter/Filter.jsx","App.js","redux/store.js","index.js","components/PhonebookForm/Form.module.scss"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","contactFilter","axios","defaults","baseURL","GET","dispatch","a","contactsActions","get","data","ADD","text","newContact","name","number","post","DELETE","id","delete","getLoading","state","contacts","loading","getFilter","filter","getAllContacts","items","getFilteredContects","createSelector","normalizedFilter","toLowerCase","includes","itemsReducer","createReducer","db","_","payload","filterReducer","combineReducers","connect","onSubmit","useState","setName","setNumber","handleInputForm","e","target","value","className","form","label","input","onChange","button","tupe","onClick","preventDefault","find","item","alert","ContactItem","contact","onDeleteContact","contactItem","ContactList","contactList","map","contactsSelectors","contactsOperations","isLoading","getContacts","handleSubmit","handleInputFilter","useEffect","wrapper","title","onInputChange","subtitle","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,MAAQ,wBAAwB,YAAc,8BAA8B,YAAc,8BAA8B,OAAS,2B,mBCAnLD,EAAOC,QAAU,CAAC,QAAU,qBAAqB,MAAQ,mBAAmB,SAAW,sBAAsB,QAAU,uB,mBCAvHD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,imCCI3CC,EAAqBC,YAAa,+BAClCC,EAAqBD,YAAa,+BAClCE,EAAmBF,YAAa,6BAGhCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAG/BM,EAAuBN,YAClC,iCAEWO,EAAuBP,YAClC,iCAEWQ,EAAqBR,YAAa,+BAGlCS,EAAgBT,YAAa,kB,yCCV1CU,IAAMC,SAASC,QAAU,wBAUlB,I,IAAMC,EAAM,yDAAM,WAAMC,GAAN,iBAAAC,EAAA,6DACvBD,EAASE,EAAgBjB,sBADF,kBAGEW,IAAMO,IAAI,aAHZ,gBAGbC,EAHa,EAGbA,KACRJ,EAASE,EAAgBf,mBAAmBiB,IAJvB,gDAMrBJ,EAASE,EAAgBd,iBAAhB,OANY,yDAAN,uDAWNiB,EAAM,SAAAC,GAAI,8CAAI,WAAMN,GAAN,mBAAAC,EAAA,6DACnBM,EAAa,CAAEC,KAAMF,EAAKE,KAAMC,OAAQH,EAAKG,QAEnDT,EAASE,EAAgBb,qBAHA,kBAMAO,IAAMc,KAAK,YAAaH,GANxB,gBAMfH,EANe,EAMfA,KACRJ,EAASE,EAAgBZ,kBAAkBc,IAPpB,kDASvBJ,EAASE,EAAgBX,gBAAhB,OATc,0DAAJ,uDAcVoB,EAAS,SAAAC,GAAE,8CAAI,WAAMZ,GAAN,SAAAC,EAAA,6DAC1BD,EAASE,EAAgBV,wBADC,kBAIlBI,IAAMiB,OAAN,oBAA0BD,IAJR,OAKxBZ,EAASE,EAAgBT,qBAAqBmB,IALtB,gDAOxBZ,EAASE,EAAgBR,mBAAhB,OAPe,yDAAJ,uD,QC9CXoB,EAAa,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SACrCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QACpCC,EAAiB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,OAGzCC,EAAsBC,YACjC,CAACH,EAAgBF,IACjB,SAACF,EAAUG,GACT,IAAMK,EAAmBL,EAAOM,cAEhC,OAAOT,EAASG,QAAO,qBAAGX,KACnBiB,cAAcC,SAASF,S,8BCT5BG,EAAeC,YAAcC,EAAGb,UAAJ,mBAC/Bd,EAAgBf,oBAAqB,SAAC2C,EAAD,YAAMC,WADZ,cAE/B7B,EAAgBZ,mBAAoB,SAACyB,EAAD,YAAUgB,SAAV,mBAEhChB,OAJ2B,cAM/Bb,EAAgBT,sBAAuB,SAACsB,EAAD,OAAUgB,EAAV,EAAUA,QAAV,OACtChB,EAAMI,QAAO,qBAAGP,KAAgBmB,QAPF,IAU5Bd,EAAUW,aAAc,GAAD,mBAC1B1B,EAAgBjB,oBAAqB,kBAAM,KADjB,cAE1BiB,EAAgBf,oBAAqB,kBAAM,KAFjB,cAG1Be,EAAgBd,kBAAmB,kBAAM,KAHf,cAI1Bc,EAAgBb,mBAAoB,kBAAM,KAJhB,cAK1Ba,EAAgBZ,mBAAoB,kBAAM,KALhB,cAM1BY,EAAgBX,iBAAkB,kBAAM,KANd,cAO1BW,EAAgBV,sBAAuB,kBAAM,KAPnB,cAQ1BU,EAAgBT,sBAAuB,kBAAM,KARnB,cAS1BS,EAAgBR,oBAAqB,kBAAM,KATjB,IAYvBsC,EAAgBJ,YAAc,GAAD,eAChC1B,EAAgBP,eAAgB,SAACmC,EAAD,YAAMC,YAG1BE,cAAgB,CAC7BZ,MAAOM,EACPR,OAAQa,EACRf,Y,sBC8BaiB,eAJS,SAAAnB,GAAK,MAAK,CAChCA,MAAOA,KAG+B,KAAzBmB,EA5DF,SAAC,GAAyB,IAAvBnB,EAAsB,EAAtBA,MAAOoB,EAAe,EAAfA,SAAe,EACZC,mBAAS,IADG,mBAC7B5B,EAD6B,KACvB6B,EADuB,OAERD,mBAAS,IAFD,mBAE7B3B,EAF6B,KAErB6B,EAFqB,KAK9BC,EAAkB,SAAAC,GAAM,IAAD,EACHA,EAAEC,OAAlBjC,EADmB,EACnBA,KAAMkC,EADa,EACbA,MACL,SAATlC,EAAkB6B,EAAQK,GAASJ,EAAUI,IAoB/C,OACE,uBAAMC,UAAWC,OAAjB,UACE,wBAAOD,UAAWE,QAAlB,iBAEE,uBACEF,UAAWG,QACXtC,KAAK,OACLkC,MAAOlC,EACPuC,SAAUR,OAId,wBAAOI,UAAWE,QAAlB,mBAEE,uBACEF,UAAWG,QACXtC,KAAK,SACLkC,MAAOjC,EACPsC,SAAUR,OAId,wBAAQI,UAAWK,SAAQC,KAAK,SAASC,QAtCpB,SAAAV,GACvBA,EAAEW,iBAEFpC,EAAMC,SAASK,MAAM+B,MACnB,SAAAC,GAAI,OAAIA,EAAK7C,KAAKiB,gBAAkBjB,EAAKiB,iBAEvC6B,MAAM,GAAD,OAAI9C,EAAJ,6BACL2B,EAAS,CACP3B,KAAMA,EACNC,OAAQA,IAGd4B,EAAQ,IACRC,EAAU,KAyBR,+B,QCxCSiB,EAXK,SAAC,GAAD,QAAGC,QAAW5C,EAAd,EAAcA,GAAIJ,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,OAAUgD,EAAlC,EAAkCA,gBAAlC,OAClB,qBAAId,UAAWe,cAAf,UACE,iCACGlD,EADH,KACWC,KAEX,wBAAQkC,UAAWK,SAAQE,QAAS,kBAAMO,EAAgB7C,IAA1D,wBCSW+C,EAZK,SAAC,GAAD,IAAG3C,EAAH,EAAGA,SAAUyC,EAAb,EAAaA,gBAAb,OAClB,oBAAId,UAAWiB,cAAf,SACG5C,EAAS6C,KAAI,SAAAL,GAAO,OACnB,cAAC,EAAD,CAEEA,QAASA,EACTC,gBAAiBA,GAFZD,EAAQ5C,UCMNsB,eAVS,SAAAnB,GAAK,MAAK,CAChCC,SAAU8C,EAAkBxC,oBAAoBP,OAKvB,SAAAf,GAAQ,MAAK,CACtCyD,gBAAiB,SAAA7C,GAAE,OAAIZ,EAAS+D,EAAmBpD,OAAOC,QAG7CsB,CAA6CyB,G,QCK7CzB,gBARS,SAAAnB,GAAK,MAAK,CAChC2B,MAAOoB,EAAkB5C,UAAUH,OAGV,SAAAf,GAAQ,MAAK,CACtC+C,SAAU,SAAAP,GAAC,OAAIxC,EAASE,EAAgBP,cAAc6C,EAAEC,OAAOC,YAGlDR,EAfA,SAAC,GAAD,IAAGQ,EAAH,EAAGA,MAAOK,EAAV,EAAUA,SAAV,OACb,wBAAOJ,UAAWE,QAAlB,kCAEE,uBAAOF,UAAWG,QAAOJ,MAAOA,EAAOK,SAAUA,U,SCmBrD,IAWeb,gBAXS,SAAAnB,GAAK,MAAK,CAChCiD,UAAWF,EAAkBhD,WAAWC,OAGf,SAAAf,GACzB,MAAO,CACLiE,YAAa,kBAAMjE,EAAS+D,EAAmBhE,QAC/CmE,aAAc,SAAA3D,GAAU,OAAIP,EAAS+D,EAAmB1D,IAAIE,QAIjD2B,EA7Bf,YAA8D,IAA/CgC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,kBAAmBH,EAAa,EAAbA,UAK9C,OAJAI,qBAAU,WACRL,EAAmBhE,SAInB,sBAAK4C,UAAW0B,WAAhB,UACE,oBAAI1B,UAAW2B,SAAf,uBACA,cAAC,EAAD,CAAMC,cAAeJ,EAAmBhC,SAAU+B,IAClD,qBAAIvB,UAAW6B,YAAf,sBACYR,GAAa,sBAAMrB,UAAW1B,WAAjB,2BAEzB,cAAC,GAAD,IACA,cAAC,EAAD,U,4BCRAwD,GAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHhD,CAMdC,OAaaC,GAVDC,YAAe,CAC3BC,QAAS,CACPtE,SAAUuE,GAEZd,cACAe,UAAUC,I,MCnBZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SAEE,cAAC,GAAD,QAIJS,SAASC,eAAe,U,kBCf1B/G,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,wB","file":"static/js/main.4530613a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Contacts_label__1FN1x\",\"input\":\"Contacts_input__15bVW\",\"contactList\":\"Contacts_contactList__1bH7v\",\"contactItem\":\"Contacts_contactItem__3MiV1\",\"button\":\"Contacts_button__ufCm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__RCHjb\",\"title\":\"App_title__2oBiX\",\"subtitle\":\"App_subtitle__3q6oi\",\"loading\":\"App_loading__3Rsj5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2pNgv\",\"input\":\"Filter_input__YmgBH\"};","import { createAction } from '@reduxjs/toolkit';\n\n// Synchronous actions\n\n// Get\nexport const getContactsRequest = createAction('contacts/getContactsRequest');\nexport const getContactsSuccess = createAction('contacts/getContactsSuccess');\nexport const getContactsError = createAction('contacts/getContactsError');\n\n// Add\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\n// Delete\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n// Filter\nexport const contactFilter = createAction('contact/filter');\n","import axios from 'axios';\n// import {\n//   getContactsRequest,\n//   getContactsSuccess,\n//   getContactsError,\n//   addContactRequest,\n//   addContactSuccess,\n//   addContactError,\n//   deleteContactRequest,\n//   deleteContactSuccess,\n//   deleteContactError,\n// } from './contact-actions';\nimport { contactsActions } from '../contacts';\n\naxios.defaults.baseURL = 'http://localhost:2222';\n\n/**\n * Операция это функция, вызванная в компоненте,\n * которая возвращает другую функцию, в которой\n * выполняются асинх запросы по паттерну:\n * Request > Success > Error\n */\n\n// GET\nexport const GET = () => async dispatch => {\n  dispatch(contactsActions.getContactsRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(contactsActions.getContactsSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.getContactsError(error));\n  }\n};\n\n// ADD\nexport const ADD = text => async dispatch => {\n  const newContact = { name: text.name, number: text.number };\n\n  dispatch(contactsActions.addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', newContact);\n    dispatch(contactsActions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.addContactError(error));\n  }\n};\n\n// DELETE\nexport const DELETE = id => async dispatch => {\n  dispatch(contactsActions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(contactsActions.deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(contactsActions.deleteContactError(error));\n  }\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\n// Простые селекторы\nexport const getLoading = state => state.contacts.loading;\nexport const getFilter = state => state.contacts.filter;\nexport const getAllContacts = state => state.contacts.items;\n\n// Композитный селектор\nexport const getFilteredContects = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n/**\n * Функция получает весь стейт и возвращает маленькую\n * его часть\n */\n\n/* ===========================================\n// ** Before memoization\n\nexport const getFilteredContects = state => {\n  const contacts = getAllContacts(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\n------------------------------------------- */\n","import { createReducer } from '@reduxjs/toolkit';\nimport db from '../../components/dataBase/db.json';\nimport { combineReducers } from 'redux';\nimport { contactsActions } from '../contacts';\n\nconst itemsReducer = createReducer(db.contacts, {\n  [contactsActions.getContactsSuccess]: (_, { payload }) => payload,\n  [contactsActions.addContactSuccess]: (state, { payload }) => [\n    payload,\n    ...state,\n  ],\n  [contactsActions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.getContactsRequest]: () => true,\n  [contactsActions.getContactsSuccess]: () => false,\n  [contactsActions.getContactsError]: () => false,\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.deleteContactRequest]: () => true,\n  [contactsActions.deleteContactSuccess]: () => false,\n  [contactsActions.deleteContactError]: () => false,\n});\n\nconst filterReducer = createReducer('', {\n  [contactsActions.contactFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading,\n});\n","import { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { form, label, input, button } from './Form.module.scss';\n\nconst Form = ({ state, onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // Записывает значение инпута в стейт\n  const handleInputForm = e => {\n    const { name, value } = e.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  // Создает объект контакта\n  const handleAddContact = e => {\n    e.preventDefault();\n\n    state.contacts.items.find(\n      item => item.name.toLowerCase() === name.toLowerCase(),\n    )\n      ? alert(`${name} is already in contacts.`)\n      : onSubmit({\n          name: name,\n          number: number,\n        });\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={form}>\n      <label className={label}>\n        Name\n        <input\n          className={input}\n          name=\"name\"\n          value={name}\n          onChange={handleInputForm}\n        />\n      </label>\n\n      <label className={label}>\n        Number\n        <input\n          className={input}\n          name=\"number\"\n          value={number}\n          onChange={handleInputForm}\n        />\n      </label>\n\n      <button className={button} tupe=\"submit\" onClick={handleAddContact}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nconst mapStateToProps = state => ({\n  state: state,\n});\n\nexport default connect(mapStateToProps, null)(Form);\n","import { contactItem, button } from './Contacts.module.scss';\n\nconst ContactItem = ({ contact: { id, name, number }, onDeleteContact }) => (\n  <li className={contactItem}>\n    <span>\n      {name}: {number}\n    </span>\n    <button className={button} onClick={() => onDeleteContact(id)}>\n      Delete\n    </button>\n  </li>\n);\n\nexport default ContactItem;\n","import ContactItem from './ContactItem';\nimport { contactList } from './Contacts.module.scss';\n\n// Презентационный компонент (без логики)\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={contactList}>\n    {contacts.map(contact => (\n      <ContactItem\n        key={contact.id}\n        contact={contact}\n        onDeleteContact={onDeleteContact}\n      />\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport ContactList from './ContactList';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getFilteredContects(state),\n});\n\n// Dispatch в компоненте вызывает операцию\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.DELETE(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { connect } from 'react-redux';\nimport { contactsSelectors, contactsActions } from '../../redux/contacts';\nimport { label, input } from './Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={label}>\n    Find contacts by name\n    <input className={input} value={value} onChange={onChange} />\n  </label>\n);\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.contactFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from './redux/contacts';\nimport Form from './components/PhonebookForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { wrapper, title, subtitle, loading } from './App.module.scss';\n\nfunction App({ handleSubmit, handleInputFilter, isLoading }) {\n  useEffect(() => {\n    contactsOperations.GET();\n  });\n\n  return (\n    <div className={wrapper}>\n      <h1 className={title}>Phonebook</h1>\n      <Form onInputChange={handleInputFilter} onSubmit={handleSubmit} />\n      <h2 className={subtitle}>\n        Contacts {isLoading && <span className={loading}>Loading...</span>}\n      </h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isLoading: contactsSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getContacts: () => dispatch(contactsOperations.GET()),\n    handleSubmit: newContact => dispatch(contactsOperations.ADD(newContact)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n/**\n * Connect (React компоненты)\n * - Props\n * - возвращает новый компонент, который\n * оборачивает наш компонент App и под капотом\n * подписывается к mapStateToProps и mapDispatchToProps\n */\n\n/**\n * Container (React-Redux связь)\n * - mapStateToProps\n * - использует селекторы. Контейнер\n * кидает селектору весь стейт, а селекторы\n * обратно возвращают какойто value из стора.\n * Не контейнеры, не компоненты на прямую со\n * стором не работают. Container - это функция\n * connect, в которой делаются все подписки.\n * Контейнер через селектор получает кусочки\n * стора и кждый раз при обновлении стора\n * вызвыается mapStateToProps и компонент\n * обновляется новыми props.\n */\n\n/**\n * Selector (Redux, часть логики)\n * - Store\n * - вспомогательная функция, получает\n * весь стор от контейнера, делает запрос в стор\n * и из себя возвращает это значение. Селектор\n * знает внутреннюю структуру стора. Его использует\n * контейнер при подписке mapStateToProps\n */\n\n/**\n * Reducer\n * - Store\n * - обновляет стор. Получает предидущее состояние,\n * плюс payload из actions, обрабатывает, и делает\n * следующий стейт\n */\n","import { getDefaultMiddleware, configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger'; // Don't delete\nimport { contactsReducer } from './contacts';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\n// Thunk ловит функции, которые вместо объектов\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger, // Don't delete\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport default store; // eslint-disable-line\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading=\"Loading...\" persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3-unr\",\"label\":\"Form_label__2aPb1\",\"input\":\"Form_input__2gucq\",\"button\":\"Form_button__3ZW4q\"};"],"sourceRoot":""}