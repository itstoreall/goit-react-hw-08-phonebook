{"version":3,"sources":["components/ContactList/Contacts.module.scss","components/Form/Form.module.scss","components/Filter/Filter.module.scss","App.module.scss","components/Form/Form.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.js","components/Filter/Filter.jsx","views/ContactsView.jsx"],"names":["module","exports","mapDispatchToProps","onSubmit","contactsOperations","ADD","connect","state","useState","name","setName","number","setNumber","handleInputForm","e","target","value","className","form","label","input","onChange","button","tupe","onClick","preventDefault","contacts","items","find","item","toLowerCase","alert","ContactItem","contact","id","onDeleteContact","contactItem","ContactList","contactList","map","contactsSelectors","getFilteredContects","dispatch","DELETE","getFilter","contactsActions","contactFilter","ContactsView","this","props","getContacts","Container","wrapper","title","onInputChange","handleInputFilter","handleSubmit","subtitle","isLoading","loading","Component","GET","getLoading"],"mappings":"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","file":"static/js/Contacts.16df6d40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Contacts_label__1FN1x\",\"input\":\"Contacts_input__15bVW\",\"contactList\":\"Contacts_contactList__1bH7v\",\"contactItem\":\"Contacts_contactItem__3MiV1\",\"button\":\"Contacts_button__ufCm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3wvE7\",\"label\":\"Form_label__1H9y1\",\"input\":\"Form_input__1FXum\",\"button\":\"Form_button__2ORia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2pNgv\",\"input\":\"Filter_input__YmgBH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__RCHjb\",\"subtitle\":\"App_subtitle__3q6oi\",\"loading\":\"App_loading__3Rsj5\"};","import { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { contactsOperations } from '../../redux/contacts';\nimport { form, label, input, button } from './Form.module.scss';\n\nconst Form = ({ state, onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // Записывает значение инпута в стейт\n  const handleInputForm = (e) => {\n    const { name, value } = e.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  // Создает объект контакта\n  const handleAddContact = (e) => {\n    e.preventDefault();\n\n    state.contacts.items.find(\n      (item) => item.name.toLowerCase() === name.toLowerCase()\n    )\n      ? alert(`${name} is already in contacts.`)\n      : onSubmit({\n          name: name,\n          number: number,\n        });\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={form}>\n      <label className={label}>\n        Name\n        <input\n          className={input}\n          name='name'\n          value={name}\n          onChange={handleInputForm}\n        />\n      </label>\n\n      <label className={label}>\n        Number\n        <input\n          className={input}\n          name='number'\n          value={number}\n          onChange={handleInputForm}\n        />\n      </label>\n\n      <button className={button} tupe='submit' onClick={handleAddContact}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  state: state,\n});\n\nconst mapDispatchToProps = {\n  onSubmit: contactsOperations.ADD,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import { contactItem, button } from './Contacts.module.scss';\n\nconst ContactItem = ({ contact: { id, name, number }, onDeleteContact }) => (\n  <li className={contactItem}>\n    <span>\n      {name}: {number}\n    </span>\n    <button className={button} onClick={() => onDeleteContact(id)}>\n      Delete\n    </button>\n  </li>\n);\n\nexport default ContactItem;\n","import ContactItem from './ContactItem';\nimport { contactList } from './Contacts.module.scss';\n\n// Презентационный компонент (без логики)\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={contactList}>\n    {contacts.map(contact => (\n      <ContactItem\n        key={contact.id}\n        contact={contact}\n        onDeleteContact={onDeleteContact}\n      />\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport ContactList from './ContactList';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getFilteredContects(state),\n});\n\n// Dispatch в компоненте вызывает операцию\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.DELETE(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { connect } from 'react-redux';\nimport { contactsSelectors, contactsActions } from '../../redux/contacts';\nimport { label, input } from './Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={label}>\n    Find contacts by name\n    <input className={input} value={value} onChange={onChange} />\n  </label>\n);\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.contactFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../redux/contacts';\nimport Form from '../components/Form';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\nimport { wrapper, title, subtitle, loading } from '../App.module.scss';\nimport Container from '../components/Container';\n\nclass ContactsView extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    return (\n      <Container>\n        <div className={wrapper}>\n          <h1 className={title}>Phonebook</h1>\n          <Form\n            onInputChange={this.handleInputFilter}\n            onSubmit={this.handleSubmit}\n          />\n          <h2 className={subtitle}>\n            Contacts{' '}\n            {this.isLoading && <span className={loading}>Loading...</span>}\n          </h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: contactsSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = {\n  getContacts: contactsOperations.GET,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\n"],"sourceRoot":""}