{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/AppBar/Navigation.jsx","components/AppBar/default-avatar.png","components/AppBar/UserMenu.jsx","components/AppBar/AuthNav.jsx","components/AppBar/AppBar.jsx","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","App.js","redux/store.js","index.js","components/AppBar/AppBar.module.scss","redux/contacts/contact-actions.js","redux/contacts/contact-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contact-reducer.js","components/Container/Container.jsx","components/Container/Container.module.scss"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logOut","logIn","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUsername","connect","authSelectors","to","exact","className","s","link","activeClassName","activeLink","useStyles","makeStyles","authBtn","marginLeft","backgroundColor","color","boxShadow","mapDispatchToProps","onLogout","authOperations","avatar","defaultAvatar","ms","container","src","alt","width","userName","Button","variant","type","onClick","AuthNav","header","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","Container","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","module","exports","getContactsRequest","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","contactFilter","GET","contactsActions","ADD","description","newContact","number","DELETE","id","delete","getLoading","getFilter","filter","getAllContacts","items","getFilteredContects","createSelector","normalizedFilter","toLowerCase","includes","itemsReducer","filterReducer","children"],"mappings":"0SAGMA,EAAkBC,YAAa,wBAC/BC,EAAkBD,YAAa,wBAC/BE,EAAgBF,YAAa,sBAG7BG,EAAeH,YAAa,qBAC5BI,EAAeJ,YAAa,qBAC5BK,EAAaL,YAAa,mBAajB,GACbD,kBACAE,kBACAC,gBACAI,cAdoBN,YAAa,sBAejCO,cAdoBP,YAAa,sBAejCQ,YAdkBR,YAAa,oBAe/BG,eACAC,eACAC,aACAI,sBAf4BT,YAAa,8BAgBzCU,sBAf4BV,YAAa,8BAgBzCW,oBAf0BX,YAAa,6B,cCfnCY,EAAmB,CAAEC,KAAM,KAAMC,MAAO,MAExCC,EAAOC,YAAcJ,GAAD,mBACvBK,EAAYhB,iBAAkB,SAACiB,EAAD,YAAMC,QAAsBJ,QADnC,cAEvBE,EAAYb,cAAe,SAACc,EAAD,YAAMC,QAAsBJ,QAFhC,cAGvBE,EAAYV,eAAgB,kBAAMK,KAHX,cAIvBK,EAAYP,uBAAwB,SAACQ,EAAD,YAAMC,WAJnB,IAOpBC,EAAQJ,YAAc,MAAD,mBACxBC,EAAYhB,iBAAkB,SAACiB,EAAD,YAAMC,QAAsBC,SADlC,cAExBH,EAAYb,cAAe,SAACc,EAAD,YAAMC,QAAsBC,SAF/B,cAGxBH,EAAYV,eAAgB,kBAAM,QAHV,IAMrBc,EAAW,SAACH,EAAD,YAAMC,SACjBG,EAAQN,YAAc,MAAD,mBACxBC,EAAYf,cAAgBmB,GADJ,cAExBJ,EAAYZ,WAAagB,GAFD,cAGxBJ,EAAYT,YAAca,GAHF,cAIxBJ,EAAYN,oBAAsBU,GAJV,IAQrBE,EAAkBP,aAAc,GAAD,mBAClCC,EAAYhB,iBAAkB,kBAAM,KADF,cAElCgB,EAAYb,cAAe,kBAAM,KAFC,cAGlCa,EAAYP,uBAAwB,kBAAM,KAHR,cAIlCO,EAAYf,eAAgB,kBAAM,KAJA,cAKlCe,EAAYZ,YAAa,kBAAM,KALG,cAMlCY,EAAYN,qBAAsB,kBAAM,KANN,cAOlCM,EAAYV,eAAgB,kBAAM,KAPA,IAWtBiB,cAAgB,CAC7BT,OACAQ,kBACAH,QACAE,U,0CCzCFG,IAAMC,SAASC,QAAU,2CAEzB,IAAMP,EAAQ,SACRA,GACFK,IAAMC,SAASE,QAAQC,OAAOC,cAA9B,iBAAwDV,IAFtDA,EAAQ,WAKVK,IAAMC,SAASE,QAAQC,OAAOC,cAAgB,IAuEnC,GAAEC,SAlEA,SAACC,GAAD,8CAAiB,WAAOC,GAAP,eAAAC,EAAA,6DAChCD,EAAShB,EAAYlB,mBADW,kBAIP0B,IAAMU,KAAK,gBAAiBH,GAJrB,OAIxBI,EAJwB,OAM9BhB,EAAUgB,EAASC,KAAKjB,OACxBa,EAAShB,EAAYhB,gBAAgBmC,EAASC,OAPhB,gDAS9BJ,EAAShB,EAAYf,cAAc,KAAMoC,UATX,yDAAjB,uDAkEUC,OAtCZ,yDAAM,WAAON,GAAP,SAAAC,EAAA,6DACnBD,EAAShB,EAAYX,iBADF,kBAIXmB,IAAMU,KAAK,iBAJA,OAMjBf,IACAa,EAAShB,EAAYV,iBAPJ,gDASjB0B,EAAShB,EAAYT,YAAY,KAAM8B,UATtB,yDAAN,uDAsCoBE,MApDrB,SAACR,GAAD,8CAAiB,WAAOC,GAAP,eAAAC,EAAA,6DAC7BD,EAAShB,EAAYd,gBADQ,kBAIJsB,IAAMU,KAAK,eAAgBH,GAJvB,OAIrBI,EAJqB,OAM3BhB,EAAUgB,EAASC,KAAKjB,OACxBa,EAAShB,EAAYb,aAAagC,EAASC,OAPhB,gDAS3BJ,EAAShB,EAAYZ,WAAW,KAAMiC,UATX,yDAAjB,uDAoD4BG,eAxBnB,yDAAM,WAAOR,EAAUS,GAAjB,mBAAAR,EAAA,2DAIvBQ,IADaC,EAHU,EAGzBC,KAAQxB,MAHiB,wDAY3BA,EAAUuB,GACVV,EAAShB,EAAYR,yBAbM,kBAgBFgB,IAAMoB,IAAI,kBAhBR,OAgBnBT,EAhBmB,OAkBzBH,EAAShB,EAAYP,sBAAsB0B,EAASC,OAlB3B,kDAoBzBJ,EAAShB,EAAYN,oBAAoB,KAAM2B,UApBtB,0DAAN,0DCpDR,GACbQ,mBANyB,SAACC,GAAD,OAAWA,EAAMH,KAAKrB,iBAO/CyB,YALkB,SAACD,GAAD,OAAWA,EAAMH,KAAK7B,KAAKF,Q,4KC2BhCoC,eAJS,SAACF,GAAD,MAAY,CAClCxB,gBAAiB2B,IAAcJ,mBAAmBC,MAGrCE,EAvBI,SAAC,GAAD,IAAG1B,EAAH,EAAGA,gBAAH,OACjB,gCACE,cAAC,IAAD,CAAS4B,GAAG,IAAIC,OAAK,EAACC,UAAWC,IAAEC,KAAMC,gBAAiBF,IAAEG,WAA5D,kBAIClC,GACC,cAAC,IAAD,CACE4B,GAAG,YACHC,OAAK,EACLC,UAAWC,IAAEC,KACbC,gBAAiBF,IAAEG,WAJrB,4B,kBCbS,MAA0B,2CCQnCC,EAAYC,YAAW,CAC3BC,QAAS,CACPC,WAAY,EACZC,gBAAiB,UACjBC,MAAO,QAEP,UAAW,CACTD,gBAAiB,UACjBE,UAAW,QAEb,UAAW,CACTA,UAAW,sCAiCXC,EAAqB,CACzBC,SAAUC,IAAe5B,QAGZU,eATS,SAACF,GAAD,MAAY,CAClClC,KAAMqC,IAAcF,YAAYD,GAChCqB,OAAQC,KAO8BJ,EAAzBhB,EAhCE,SAAC,GAAgC,IAA9BmB,EAA6B,EAA7BA,OAAQvD,EAAqB,EAArBA,KAAMqD,EAAe,EAAfA,SAC1BI,EAAKZ,IAEX,OACE,sBAAKL,UAAWC,IAAEiB,UAAlB,UACE,qBAAKC,IAAKJ,EAAQK,IAAI,GAAGC,MAAM,KAAKrB,UAAWC,IAAEc,SACjD,sBAAMf,UAAWC,IAAEqB,SAAnB,SAA8B9D,IAE9B,cAAC+D,EAAA,EAAD,CACEC,QAAQ,YACRxB,UAAWiB,EAAGV,QACdkB,KAAK,SACLC,QAASb,EAJX,0BC1BAR,EAAYC,YAAW,CAC3BC,QAAS,CACPC,WAAY,EACZC,gBAAiB,UACjBC,MAAO,QAEP,UAAW,CACTD,gBAAiB,UACjBE,UAAW,QAEb,UAAW,CACTA,UAAW,sCA0CFgB,EArCC,WACd,IAAMV,EAAKZ,IAEX,OACE,gCACE,cAAC,IAAD,CAASP,GAAG,YAAYC,OAAK,EAA7B,SACE,cAACwB,EAAA,EAAD,CAAQC,QAAQ,YAAYxB,UAAWiB,EAAGV,QAASkB,KAAK,SAAxD,4BAKF,cAAC,IAAD,CAAS3B,GAAG,SAASC,OAAK,EAA1B,SACE,cAACwB,EAAA,EAAD,CAAQC,QAAQ,YAAYxB,UAAWiB,EAAGV,QAASkB,KAAK,SAAxD,yBCfO7B,eAJS,SAACF,GAAD,MAAY,CAClCxB,gBAAiB2B,IAAcJ,mBAAmBC,MAGZ,KAAzBE,EAXA,SAAC,GAAD,IAAG1B,EAAH,EAAGA,gBAAH,OACb,yBAAQ8B,UAAWC,IAAE2B,OAArB,UACE,cAAC,EAAD,IACC1D,EAAkB,cAAC,EAAD,IAAe,cAAC,EAAD,U,uBCoBvB0B,eAJS,SAACF,GAAD,MAAY,CAClCxB,gBAAiB2B,IAAcJ,mBAAmBC,MAGrCE,EAlBM,SAAC,GAAD,IACRiC,EADQ,EACnBC,UACA5D,EAFmB,EAEnBA,gBACA6D,EAHmB,EAGnBA,WACGC,EAJgB,mEAMnB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACC,GAAD,OACNhE,EAAkB,cAAC2D,EAAD,eAAeK,IAAY,cAAC,IAAD,CAAUpC,GAAIiC,WCMlDnC,eAJS,SAACF,GAAD,MAAY,CAClCxB,gBAAiB2B,IAAcJ,mBAAmBC,MAGrCE,EAtBK,SAAC,GAAD,IACPiC,EADO,EAClBC,UACA5D,EAFkB,EAElBA,gBACA6D,EAHkB,EAGlBA,WACGC,EAJe,mEAMlB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACC,GAAD,OACNhE,GAAmB8D,EAAWG,WAC5B,cAAC,IAAD,CAAUrC,GAAIiC,IAEd,cAACF,EAAD,eAAeK,WCRjBE,EAAWC,gBAAK,kBACpB,iCAEIC,EAAeD,gBAAK,kBACxB,uDAEIE,EAAYF,gBAAK,kBACrB,uDAEIG,EAAeH,gBAAK,kBACxB,iCAGII,E,uKACJ,WACEC,KAAKR,MAAMS,qB,oBAGb,WACE,OACE,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,IAEA,cAAC,WAAD,CAAUC,SAAU,2CAApB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAaC,KAAK,IAAI/C,OAAK,EAAC+B,UAAWM,IACvC,cAAC,EAAD,CACEU,KAAK,YACLX,YAAU,EACVJ,WAAW,YACXD,UAAWQ,IAEb,cAAC,EAAD,CACEQ,KAAK,SACLX,YAAU,EACVJ,WAAW,YACXD,UAAWS,IAEb,cAAC,EAAD,CACEO,KAAK,YACLf,WAAW,SACXD,UAAWU,gB,GA5BPX,aAqCZjB,EAAqB,CACzB+B,iBAAkB7B,IAAe1B,gBAGpBQ,cAAQ,KAAMgB,EAAdhB,CAAkC6C,G,gDC/C3CM,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAO1DC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACPxE,KAAMyE,YAAeP,EAAmBQ,KACxCC,SAAUC,KAEZpB,aACAqB,UAAUC,IAKG,GAAER,QAAOS,UAFNC,YAAaV,I,OCjC/BW,IAASvC,OACP,cAAC,IAAMwC,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAaa,QAAQ,aAAaJ,UAAWT,EAAMS,UAAnD,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRK,SAASC,eAAe,U,mBClB1BC,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,WAAa,2BAA2B,UAAY,0BAA0B,OAAS,uBAAuB,SAAW,2B,ogCCI1LC,EAAqBpI,YAAa,+BAClCqI,EAAqBrI,YAAa,+BAClCsI,EAAmBtI,YAAa,6BAGhCuI,EAAoBvI,YAAa,8BACjCwI,EAAoBxI,YAAa,8BACjCyI,EAAkBzI,YAAa,4BAG/B0I,EAAuB1I,YAClC,iCAEW2I,EAAuB3I,YAClC,iCAEW4I,EAAqB5I,YAAa,+BAGlC6I,EAAgB7I,YAAa,kB,0CCF7B8I,EAAM,yDAAM,WAAO7G,GAAP,iBAAAC,EAAA,6DACvBD,EAAS8G,EAAgBX,sBADF,kBAIE3G,IAAMoB,IAAI,aAJZ,gBAIbR,EAJa,EAIbA,KAERJ,EAAS8G,EAAgBV,mBAAmBhG,IANvB,gDAQrBJ,EAAS8G,EAAgBT,iBAAiB,KAAMhG,UAR3B,yDAAN,uDAaN0G,EAAM,SAACC,GAAD,8CAAiB,WAAOhH,GAAP,mBAAAC,EAAA,6DAC5BgH,EAAa,CAAErI,KAAMoI,EAAYpI,KAAMsI,OAAQF,EAAYE,QAEjElH,EAAS8G,EAAgBR,qBAHS,kBAMT9G,IAAMU,KAAK,YAAa+G,GANf,gBAMxB7G,EANwB,EAMxBA,KACRJ,EAAS8G,EAAgBP,kBAAkBnG,IAPX,kDAShCJ,EAAS8G,EAAgBN,gBAAgB,KAAMnG,UATf,0DAAjB,uDAcN8G,EAAS,SAACC,GAAD,8CAAQ,WAAOpH,GAAP,SAAAC,EAAA,6DAC5BD,EAAS8G,EAAgBL,wBADG,kBAIpBjH,IAAM6H,OAAN,oBAA0BD,IAJN,OAK1BpH,EAAS8G,EAAgBJ,qBAAqBU,IALpB,gDAO1BpH,EAAS8G,EAAgBH,mBAAmB,KAAMtG,UAPxB,yDAAR,uD,QC9CTiH,EAAa,SAAAxG,GAAK,OAAIA,EAAMwE,SAASQ,SACrCyB,EAAY,SAAAzG,GAAK,OAAIA,EAAMwE,SAASkC,QACpCC,EAAiB,SAAA3G,GAAK,OAAIA,EAAMwE,SAASoC,OAGzCC,EAAsBC,YACjC,CAACH,EAAgBF,IACjB,SAACjC,EAAUkC,GACT,IAAMK,EAAmBL,EAAOM,cAEhC,OAAOxC,EAASkC,QAAO,qBAAG5I,KACnBkJ,cAAcC,SAASF,S,sBCT5BG,EAAejJ,YAAc,IAAD,mBAC/B+H,EAAgBV,oBAAqB,SAACnH,EAAD,YAAMC,WADZ,cAE/B4H,EAAgBP,mBAAoB,SAACzF,EAAD,YAAU5B,SAAV,mBAEhC4B,OAJ2B,cAM/BgG,EAAgBJ,sBAAuB,SAAC5F,EAAD,OAAU5B,EAAV,EAAUA,QAAV,OACtC4B,EAAM0G,QAAO,qBAAGJ,KAAgBlI,QAPF,IAU5B4G,EAAU/G,aAAc,GAAD,mBAC1B+H,EAAgBX,oBAAqB,kBAAM,KADjB,cAE1BW,EAAgBV,oBAAqB,kBAAM,KAFjB,cAG1BU,EAAgBT,kBAAmB,kBAAM,KAHf,cAI1BS,EAAgBR,mBAAoB,kBAAM,KAJhB,cAK1BQ,EAAgBP,mBAAoB,kBAAM,KALhB,cAM1BO,EAAgBN,iBAAkB,kBAAM,KANd,cAO1BM,EAAgBL,sBAAuB,kBAAM,KAPnB,cAQ1BK,EAAgBJ,sBAAuB,kBAAM,KARnB,cAS1BI,EAAgBH,oBAAqB,kBAAM,KATjB,IAYvBsB,EAAgBlJ,YAAc,GAAD,eAChC+H,EAAgBF,eAAgB,SAAC3H,EAAD,YAAMC,YAG1BK,cAAgB,CAC7BmI,MAAOM,EACPR,OAAQS,EACRnC,a,mGC3Ba9B,EAJG,SAAC,GAAD,IAAGkE,EAAH,EAAGA,SAAH,OAChB,qBAAK9G,UAAWC,IAAE2C,UAAlB,SAA8BkE,M,mBCHhCjC,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.764d43ab.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\n// Register\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\n// login\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\n// logout\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\n// Current User\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\n// eslint-disable-next-line\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { authActions } from '../auth';\n// import authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\n// Юзер залогинен или нет\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\n// It's a State\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n\n/**\n * Редюсер обрабатывает каждый кейс из операций\n */\n","import axios from 'axios';\nimport { authActions } from '../auth';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n// Register (POST)\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token); // Adds token to the Bearer\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n// Log in\nconst logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token); // Adds token to the Bearer\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n// Log out\nconst logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset(); // Remove token from the Bearer\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n// Get Current User\nconst getCurrentUser = () => async (dispatch, getState) => {\n  // Забираем токен из стейта через getState()\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  // Проверяем наличие токена\n  if (!persistedToken) {\n    return;\n  }\n\n  // Добавляем токен в http заголовок\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logOut, logIn, getCurrentUser }; // eslint-disable-line\n","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\n\nconst getUsername = (state) => state.auth.user.name;\n\n// eslint-disable-next-line\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\nimport s from './AppBar.module.scss';\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink to='/' exact className={s.link} activeClassName={s.activeLink}>\n      Home\n    </NavLink>\n\n    {isAuthenticated && (\n      <NavLink\n        to='/contacts'\n        exact\n        className={s.link}\n        activeClassName={s.activeLink}\n      >\n        Contacts\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport defaultAvatar from './default-avatar.png';\nimport s from './AppBar.module.scss';\n\nconst useStyles = makeStyles({\n  authBtn: {\n    marginLeft: 5,\n    backgroundColor: '#6b7cb4',\n    color: 'white',\n\n    '&:hover': {\n      backgroundColor: '#5064a3',\n      boxShadow: 'none',\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n    },\n  },\n});\n\nconst UserMenu = ({ avatar, name, onLogout }) => {\n  const ms = useStyles();\n\n  return (\n    <div className={s.container}>\n      <img src={avatar} alt='' width='32' className={s.avatar} />\n      <span className={s.userName}>{name}</span>\n\n      <Button\n        variant='contained'\n        className={ms.authBtn}\n        type='button'\n        onClick={onLogout}\n      >\n        Logout\n      </Button>\n      {/* <button className={classes.logoutBtn} type='button' onClick={onLogout}>\n        Logout\n      </button> */}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import s from './AppBar.module.scss';\nimport { NavLink } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  authBtn: {\n    marginLeft: 5,\n    backgroundColor: '#6b7cb4',\n    color: 'white',\n\n    '&:hover': {\n      backgroundColor: '#5064a3',\n      boxShadow: 'none',\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n    },\n  },\n});\n\nconst AuthNav = () => {\n  const ms = useStyles();\n\n  return (\n    <div>\n      <NavLink to='/register' exact>\n        <Button variant='contained' className={ms.authBtn} type='button'>\n          Registration\n        </Button>\n      </NavLink>\n\n      <NavLink to='/login' exact>\n        <Button variant='contained' className={ms.authBtn} type='button'>\n          Login\n        </Button>\n      </NavLink>\n\n      {/* <NavLink\n      to='/register'\n      exact\n      className={s.link}\n      activeClassName={s.activeLink}\n    >\n      Registration\n    </NavLink> */}\n      {/* <NavLink\n        to='/login'\n        exact\n        className={s.link}\n        activeClassName={s.activeLink}\n      >\n        Login\n      </NavLink> */}\n    </div>\n  );\n};\n\nexport default AuthNav;\n","import React from 'react';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\nimport s from './AppBar.module.scss';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header className={s.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, null)(AppBar);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\n\n// Вместо пропа component используется render\n// Если юзер залогинен, рендерится Сomponent\n// Если нет, рендерится Redirect\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\n// Если юзер залогинен и маршрут ограничен, рендерится Redirect\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppBar from './components/AppBar';\nimport Container from './components/Container';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './components/Routes/PrivateRoute';\nimport PublicRoute from './components/Routes/PublicRoute';\n\n// Code splitting\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /*webpackChunkName: \"Home\"*/)\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /*webpackChunkName: \"Register\"*/)\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /*webpackChunkName: \"Login\"*/)\n);\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /*webpackChunkName: \"Contacts\"*/)\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar />\n\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <PublicRoute path='/' exact component={HomeView} />\n            <PublicRoute\n              path='/register'\n              restricted\n              redirectTo='/contacts'\n              component={RegisterView}\n            />\n            <PublicRoute\n              path='/login'\n              restricted\n              redirectTo='/contacts'\n              component={LoginView}\n            />\n            <PrivateRoute\n              path='/contacts'\n              redirectTo='/login'\n              component={ContactsView}\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n\n/**\n * Before\n * \nimport { useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from './redux/contacts';\nimport Form from './components/PhonebookForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { wrapper, title, subtitle, loading } from './App.module.scss';\n\nfunction App({ handleSubmit, handleInputFilter, isLoading }) {\n  useEffect(() => {\n    contactsOperations.GET();\n  });\n\n  return (\n    <div className={wrapper}>\n      <h1 className={title}>Phonebook</h1>\n      <Form onInputChange={handleInputFilter} onSubmit={handleSubmit} />\n      <h2 className={subtitle}>\n        Contacts {isLoading && <span className={loading}>Loading...</span>}\n      </h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: contactsSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getContacts: () => dispatch(contactsOperations.GET()),\n    handleSubmit: (newContact) => dispatch(contactsOperations.ADD(newContact)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n */\n\n/**\n * Connect (React компоненты)\n * - Props\n * - возвращает новый компонент, который\n * оборачивает наш компонент App и под капотом\n * подписывается к mapStateToProps и mapDispatchToProps\n */\n\n/**\n * Container (React-Redux связь)\n * - mapStateToProps\n * - использует селекторы. Контейнер\n * кидает селектору весь стейт, а селекторы\n * обратно возвращают какойто value из стора.\n * Не контейнеры, не компоненты на прямую со\n * стором не работают. Container - это функция\n * connect, в которой делаются все подписки.\n * Контейнер через селектор получает кусочки\n * стора и кждый раз при обновлении стора\n * вызвыается mapStateToProps и компонент\n * обновляется новыми props.\n */\n\n/**\n * Selector (Redux, часть логики)\n * - Store\n * - вспомогательная функция, получает\n * весь стор от контейнера, делает запрос в стор\n * и из себя возвращает это значение. Селектор\n * знает внутреннюю структуру стора. Его использует\n * контейнер при подписке mapStateToProps\n */\n\n/**\n * Reducer\n * - Store\n * - обновляет стор. Получает предидущее состояние,\n * плюс payload из actions, обрабатывает, и делает\n * следующий стейт\n */\n","import { getDefaultMiddleware, configureStore } from '@reduxjs/toolkit';\n// import logger from 'redux-logger'; // Don't delete\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\n// Thunk ловит функции, которые вместо объектов\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger, // Don't delete\n];\n\n// Saves to localStorage\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor }; // eslint-disable-line\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading='Loading...' persistor={store.persistor}>\n        <Router>\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3idJt\",\"link\":\"AppBar_link__2IP1y\",\"activeLink\":\"AppBar_activeLink__10P6r\",\"container\":\"AppBar_container__3zgN-\",\"avatar\":\"AppBar_avatar__2bh7P\",\"userName\":\"AppBar_userName__3xvch\"};","import { createAction } from '@reduxjs/toolkit';\n\n// Synchronous actions\n\n// Get\nexport const getContactsRequest = createAction('contacts/getContactsRequest');\nexport const getContactsSuccess = createAction('contacts/getContactsSuccess');\nexport const getContactsError = createAction('contacts/getContactsError');\n\n// Add\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\n// Delete\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n// Filter\nexport const contactFilter = createAction('contact/filter');\n","import axios from 'axios';\n// import {\n//   getContactsRequest,\n//   getContactsSuccess,\n//   getContactsError,\n//   addContactRequest,\n//   addContactSuccess,\n//   addContactError,\n//   deleteContactRequest,\n//   deleteContactSuccess,\n//   deleteContactError,\n// } from './contact-actions';\nimport { contactsActions } from '../contacts';\n\n/**\n * Операция это функция, вызванная в компоненте,\n * которая возвращает другую функцию, в которой\n * выполняются асинх запросы по паттерну:\n * Request > Success > Error\n */\n\n// GET\nexport const GET = () => async (dispatch) => {\n  dispatch(contactsActions.getContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(contactsActions.getContactsSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.getContactsError(error.message));\n  }\n};\n\n// ADD\nexport const ADD = (description) => async (dispatch) => {\n  const newContact = { name: description.name, number: description.number };\n\n  dispatch(contactsActions.addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', newContact);\n    dispatch(contactsActions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.addContactError(error.message));\n  }\n};\n\n// DELETE\nexport const DELETE = (id) => async (dispatch) => {\n  dispatch(contactsActions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(contactsActions.deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(contactsActions.deleteContactError(error.message));\n  }\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\n// Простые селекторы\nexport const getLoading = state => state.contacts.loading;\nexport const getFilter = state => state.contacts.filter;\nexport const getAllContacts = state => state.contacts.items;\n\n// Композитный селектор\nexport const getFilteredContects = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n/**\n * Функция получает весь стейт и возвращает маленькую\n * его часть\n */\n\n/* ===========================================\n// ** Before memoization\n\nexport const getFilteredContects = state => {\n  const contacts = getAllContacts(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\n------------------------------------------- */\n","import { createReducer } from '@reduxjs/toolkit';\n// import db from '../../components/dataBase/db.json';\nimport { combineReducers } from 'redux';\nimport { contactsActions } from '../contacts';\n\nconst itemsReducer = createReducer([], {\n  [contactsActions.getContactsSuccess]: (_, { payload }) => payload,\n  [contactsActions.addContactSuccess]: (state, { payload }) => [\n    payload,\n    ...state,\n  ],\n  [contactsActions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.getContactsRequest]: () => true,\n  [contactsActions.getContactsSuccess]: () => false,\n  [contactsActions.getContactsError]: () => false,\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.deleteContactRequest]: () => true,\n  [contactsActions.deleteContactSuccess]: () => false,\n  [contactsActions.deleteContactError]: () => false,\n});\n\nconst filterReducer = createReducer('', {\n  [contactsActions.contactFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading,\n});\n","import React from 'react';\nimport s from './Container.module.scss';\n\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__11SY1\"};"],"sourceRoot":""}